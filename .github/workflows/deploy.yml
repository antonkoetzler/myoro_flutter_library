name: Deploy

on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest

    if: contains(github.event.head_commit.message, '[RELEASE]') == false

    steps:
      - name: Echo GitHub Actor
        run: |
          echo "GitHub Actor: $GITHUB_ACTOR"

      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: "antonkoetzler/myoro_flutter_library"
          token: ${{ secrets.TOKEN }}

      - name: Set Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Get current version from pubspec.yaml
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{ print $2 }')
          echo "Current version is: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Determine new version
        id: new_version
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        run: |
          IFS='.' read -r -a VERSION_ARRAY <<< "$VERSION"
          PATCH=${VERSION_ARRAY[2]}
          MINOR=${VERSION_ARRAY[1]}
          MAJOR=${VERSION_ARRAY[0]}
          
          echo "Commit message: $COMMIT_MESSAGE"
          
          if [[ "$COMMIT_MESSAGE" == *"major"* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$COMMIT_MESSAGE" == *"minor"* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi
          
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Install flutter using stable channel
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Update pubspec.yaml version
        run: |
          sed -i "s/^version: .*/version: $NEW_VERSION/" pubspec.yaml
          rm pubspec.lock
          flutter clean
          flutter pub get

      - name: Deploy
        run: |
          git add -A
          git commit -m "[RELEASE]: $NEW_VERSION"
          git tag "v$NEW_VERSION"
          git push origin main --force
          git push origin "v$NEW_VERSION"
