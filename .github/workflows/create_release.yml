name: Create release


on:
  push:
    branches:
      - main

jobs:
  create_release:
    runs-on: ubuntu-latest

    if: github.actor != 'github-actions'

    steps:
      - name: Install actions checkout
        uses: actions/checkout@v3

      - name: Get current version from pubspec.yaml
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{ print $2 }')
          echo "Current version is: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Determine new version
        id: new_version
        run: |
          IFS='.' read -r -a VERSION_ARRAY <<< "$VERSION"
          PATCH=${VERSION_ARRAY[2]}
          MINOR=${VERSION_ARRAY[1]}
          MAJOR=${VERSION_ARRAY[0]}
          
          echo "Commit message: $GITHUB_EVENT_HEAD_COMMIT_MESSAGE"
          
          if [[ "$GITHUB_EVENT_HEAD_COMMIT_MESSAGE" == *"major"* ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$GITHUB_EVENT_HEAD_COMMIT_MESSAGE" == *"minor"* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi
          
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Install flutter using stable channel
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Update pubspec.yaml version
        run: |
          sed -i "s/^version: .*/version: $NEW_VERSION+1/" pubspec.yaml
          rm pubspec.lock
          flutter pub get
          echo "$(cat pubspec.yaml)"

      - name: Initialize git for action
        run: |
          git init
          git config --global user.email "antonkoetzler-faust@hotmail.com"
          git config --global user.name "Anton Koetzler-Faust"
          git remote get-url origin || git remote add origin https://${{secrets.token}}@github.com/antonkoetzler/myoro_flutter_library
          git remote set-url origin https://${{secrets.token}}@github.com/antonkoetzler/myoro_flutter_library

      - name: Push to a new branch
        run: |
          branch_name="release/$NEW_VERSION"
          git checkout -b $branch_name
          git add .
          git commit -m "release: $NEW_VERSION"
          git push origin $branch_name
          echo "BRANCH_NAME=$branch_name" >> $GITHUB_ENV

      # - name: Create a pull request
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     token: ${{ secrets.token }}
      #     branch: ${{ env.BRANCH_NAME }}
      #     commit-message: "Deploy $NEW_VERSION"
      #     base: main
      #     title: "release: $NEW_VERSION"
      #     body: "Automated release PR"

      # - name: Approve and merge PR
      #   run: |
      #     gh pr review release/$NEW_VERSION --approve
      #     gh pr merge release/$NEW_VERSION --merge
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.token }}

      # - name: Create Git tag and push everything
      #   run: |
      #     git tag "v$NEW_VERSION"
      #     git push origin "v$NEW_VERSION"
      #     git push
